syntax = "proto3";

package project;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "kiae/request.proto";
import "validate/validate.proto";

option go_package = "github.com/kiaedev/kiae/api/project";

service ProjectService {
    rpc List (ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            get: "/api/v1/projects"
        };
    }
    rpc Create (Project) returns (Project) {
        option (google.api.http) = {
            post: "/api/v1/projects"
            body: "*"
        };
    }
    rpc Update (Project) returns (Project) {
        option (google.api.http) = {
            put: "/api/v1/projects/{id}",
            body: "*",
            additional_bindings: {
                patch: "/api/v1/projects/{id}"
                body: "*"
            }
        };
    }
    rpc Read (kiae.IdRequest) returns (Project) {
        option (google.api.http) = {
            get: "/api/v1/projects/{id}"
        };
    }
    rpc Delete (kiae.IdRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/projects/{id}"
        };
    }
}

message Project {
    string id = 1; // @gotags: bson:"_id,omitempty"
    string name = 2 [(validate.rules).string = {max_len: 32, min_len: 3}];
    string intro = 3 [(validate.rules).string = {max_len: 150, min_len: 5}];
    string git_repo = 4 [(validate.rules).string = {min_len: 10, max_len: 512}];
    string git_provider = 5; // @gotags: bson:"git_provider,omitempty"
    string builder_id = 7; // @gotags: bson:"builder_id,omitempty"
    repeated string build_envs = 8; // @gotags: json:"build_args,omitempty"
    string run_command = 9; // @gotags: json:"run_command,omitempty"
    string run_args = 10; // @gotags: json:"run_args,omitempty"

    google.protobuf.Timestamp created_at = 101;
    google.protobuf.Timestamp created_by = 102;
    google.protobuf.Timestamp updated_at = 103;
    google.protobuf.Timestamp updated_by = 104;
}

message Port {
    uint32 port = 1 [(validate.rules).uint32 = {gt: 0, lte: 65535}];
    string protocol = 2 [(validate.rules).string = {in: ["TCP", "UDP", "STCP"]}];
    string appProtocol = 3 [(validate.rules).string = {in: ["http", "http2", "tcp"]}];
}

enum ConfigLevel {
    CONFIG_LEVEL_TEAM = 0;
    CONFIG_LEVEL_PROJECT = 1;
    CONFIG_LEVEL_APP = 2;
}

message ListRequest {
    string name = 1;
}

message ListResponse {
    repeated Project items = 1;
    int64 total = 2;
}