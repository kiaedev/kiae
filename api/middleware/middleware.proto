syntax = "proto3";

option go_package = "github.com/kiaedev/kiae/api/middleware";

package middleware;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "kiae/op_status.proto";
import "kiae/request.proto";
import "validate/validate.proto";


service MiddlewareService {
    rpc List (ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            get: "/api/v1/middleware/instances"
        };
    }
    rpc Create (Instance) returns (Instance) {
        option (google.api.http) = {
            post: "/api/v1/middleware/instances"
            body: "*"
        };
    }
    rpc Update (Instance) returns (Instance) {
        option (google.api.http) = {
            put: "/api/v1/middleware/instances/{id}",
            body: "*",
            additional_bindings: {
                patch: "/api/v1/middleware/instances/{id}"
                body: "*"
            }
        };
    }
    rpc Delete (kiae.IdRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/middleware/instances/{id}"
        };
    }
}

message ListRequest {
    string type = 1;
}

message ListResponse {
    repeated Instance items = 1;
    int64 total = 2;
}

message Instance {
    string id = 1; // @gotags: bson:"_id,omitempty"
    string name = 2;
    string env = 3;

    string type = 5 [(validate.rules).string = {in: ["MySQL", "MongoDB", "Redis", "Memcached", "Kafka", "RabbitMQ", "iNotify"]}];
    map<string, string> properties = 6;
    kiae.OpStatus status = 7;

    google.protobuf.Timestamp created_at = 101;
    google.protobuf.Timestamp updated_at = 103;
}