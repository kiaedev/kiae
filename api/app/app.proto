syntax = "proto3";

option go_package = "github.com/kiaedev/kiae/api/app";

package app;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "kiae/request.proto";
import "project/project.proto";
import "validate/validate.proto";

service AppService {
    rpc List (ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            get: "/api/v1/apps"
        };
    }
    rpc Create (Application) returns (Application) {
        option (google.api.http) = {
            post: "/api/v1/apps"
            body: "*"
        };
    }
    rpc Update (UpdateRequest) returns (Application) {
        option (google.api.http) = {
            put: "/api/v1/apps/{payload.id}",
            body: "payload",
            additional_bindings: {
                patch: "/api/v1/apps/{payload.id}"
                body: "payload"
            }
        };
    }
    rpc Delete (kiae.IdRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/apps/{id}"
        };
    }
    rpc Read (kiae.IdRequest) returns (Application) {
        option (google.api.http) = {
            get: "/api/v1/apps/{id}"
        };
    }
    rpc DoAction (ActionPayload) returns (Application) {
        option (google.api.http) = {
            post: "/api/v1/apps/{id}/actions"
            body: "*"
        };
    }

    rpc CfgCreate (AppCfg) returns (Configuration) {
        option (google.api.http) = {
            post: "/api/v1/apps/{appid}/configs"
            body: "payload"
        };
    }
    rpc CfgUpdate (AppCfg) returns (Configuration) {
        option (google.api.http) = {
            put: "/api/v1/apps/{appid}/configs/{payload.name}",
            body: "payload",
        };
    }
    rpc CfgDelete (AppCfg) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/apps/{appid}/configs/{payload.name}",
        };
    }

    rpc EnvCreate (AppEnv) returns (Environment) {
        option (google.api.http) = {
            post: "/api/v1/apps/{appid}/environments"
            body: "payload"
        };
    }
    rpc EnvUpdate (AppEnv) returns (Environment) {
        option (google.api.http) = {
            put: "/api/v1/apps/{appid}/environments/{payload.name}",
            body: "payload",
        };
    }
    rpc EnvDelete (AppEnv) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/apps/{appid}/environments/{payload.name}",
        };
    }
}

message Application {
    string id = 1; // @gotags: bson:"_id,omitempty"
    string pid = 2 [(validate.rules).string = {len: 24}];
    string env = 3 [(validate.rules).string = {min_len: 3, max_len: 16}];
    string name = 4;
    string image = 5 [(validate.rules).string = {min_len: 3, max_len: 128}];
    repeated project.Port ports = 6;
    Status status = 7;
    Size size = 8;
    uint32 replicas = 9;
    map<string, string> annotations = 10;

    HealthProbe liveness_probe = 15;
    HealthProbe readiness_probe = 16;
    repeated Configuration configs = 17;
    repeated Environment environments = 18;

    google.protobuf.Timestamp created_at = 101; // @gotags: bson:"created_at,omitempty"
    google.protobuf.Timestamp created_by = 102; // @gotags: bson:"created_by,omitempty"
    google.protobuf.Timestamp updated_at = 103; // @gotags: bson:"updated_at,omitempty"
    google.protobuf.Timestamp updated_by = 104; // @gotags: bson:"updated_by,omitempty"
}

message HealthProbe {
    bool enabled = 8;
    uint32 port = 1;
    string path = 2;
    uint32 period_seconds = 3;
    uint32 timeout_seconds = 4;
    uint32 success_threshold = 5;
    uint32 failure_threshold = 6;
    uint32 initial_delay_seconds = 7;
}

message Configuration {
    string name = 1;
    string filename = 2 [(validate.rules).string = {max_len: 16,min_len: 2}];
    string content = 3;
    string mount_path = 4 [(validate.rules).string = {max_len: 255,min_len: 2}];
    google.protobuf.Timestamp created_at = 101;
    google.protobuf.Timestamp updated_at = 102;
}

message Environment {
    enum Type {
        SYSTEM = 0;
        PROJ = 1;
        USER = 2;
    }
    Type type = 1;
    string name = 2;
    string value = 3;

    google.protobuf.Timestamp created_at = 101;
    google.protobuf.Timestamp updated_at = 102;
}

message AppEnv {
    string appid = 1;
    Environment payload = 2;
}

message AppCfg {
    string appid = 1;
    Configuration payload = 2;
}

message ListRequest {
    string pid = 1;
}

message ListResponse {
    repeated Application items = 1;
    int64 total = 2;
}

enum Size {
    SIZE_NANO = 0;
    SIZE_MIRCO = 1;
    SIZE_MINI = 2;
    SIZE_SMALL = 3;
    SIZE_MEDIUM = 4;
    SIZE_LARGE = 5;
    SIZE_XLARGE = 6;
    SIZE_XXLARGE = 7;
}
enum Status {
    STATUS_CREATED = 0;
    STATUS_RUNNING = 1;
    STATUS_STOPPED = 2;
    STATUS_DEPLOYING = 3;
    STATUS_UNHEALTHY = 4;
}

message UpdateRequest {
    Application payload = 1;
    google.protobuf.FieldMask update_mask = 2;
}

message ActionPayload {
    enum Action {
        START = 0;
        STOP = 1;
        RESTART = 2;
    }
    string id = 1;
    Action action = 2;
}
