syntax = "proto3";

package user;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "kiae/request.proto";
import "validate/validate.proto";

option go_package = "github.com/kiaedev/kiae/api/user";

message User {
    string id = 1; // @gotags: bson:"_id,omitempty"
    string email = 2 [(validate.rules).string = {email: true}];
    string outer_id = 3; // @gotags: bson:"outer_id,omitempty"
    string nickname = 4;
    string avatar = 5;
    repeated string roles = 6;
    map<string, google.protobuf.Any> extra = 7;

    string provider = 9;
    enum Status {
        PENDING = 0;
        BUILDING = 1;
        PUBLISHED = 2;
        EXPIRED = 3;
        FAILED = 4;
    }
    Status status = 10;

    google.protobuf.Timestamp created_at = 101; // @gotags: bson:"created_at,omitempty"
    google.protobuf.Timestamp updated_at = 103; // @gotags: bson:"updated_at,omitempty"
}

message UserListRequest {
    string username = 1;
}

message UserListResponse {
    repeated User items = 1;
    int64 total = 2;
}

service UserService {
    rpc List (UserListRequest) returns (UserListResponse) {
        option (google.api.http) = {
            get: "/api/v1/users"
        };
    }
    rpc Info (google.protobuf.Empty) returns (User) {
        option (google.api.http) = {
            get: "/api/v1/user"
        };
    }
}